# vim: ft=colortemplate fdm=marker cc=22,40,58

# markdown{{{
markdownLinkText -> Yellow
markdownListMarker -> Blue
markdownOrderedListMarker -> Blue
markdownCodeDelimiter -> Aqua
markdownCode -> Green
markdownId -> Orange
markdownIdDeclaration -> Orange
markdownBoldDelimiter -> Grey
markdownItalicDelimiter -> Comment
markdownRule -> Magenta
markdownHeadingRule -> Magenta
markdownHeadingDelimiter -> Grey

mkdListItem -> Blue
mkdLink -> Yellow
mkdCodeDelimiter -> Aqua
mkdCode -> Green
mkdID -> Orange
mkdBold -> Grey
mkdItalic -> Comment
mkdRule -> Magenta
mkdHeading -> Grey
mkdDelimiter -> Grey
#}}}
# rst{{{
rstDirective -> Orange
rstExplicitMarkup -> Blue
rstDelimiter -> Orange
rstTableLines -> Grey
#}}}
# tex{{{
texDocType -> Red
texDocTypeArgs -> Aqua
texBeginEndName -> Magenta
texStatement -> Green
texTitle -> Aqua
texSection -> Orange
#}}}
# html{{{
htmlStatement -> Orange
htmlTag -> Orange
htmlEndTag -> Yellow
htmlScriptTag -> Purple
htmlSpecialTagName -> Blue
#}}}
# xml{{{
xmlTag -> Orange
xmlTagName -> Orange
xmlEndTag -> Yellow
xmlEqual -> Blue
#}}}
# css{{{
cssClassName -> Yellow
cssClassNameDot -> cssClassName
cssTagName -> Red
cssIdentifier -> Aqua
cssAttributeSelector -> Aqua
cssProp -> Aqua
cssAttr -> Orange
cssPseudoClass -> Blue
cssPseudoClassId -> Blue
cssImportant -> Red
cssUnitDecorators -> Blue
cssColor -> Orange
cssMediaType -> Blue
cssAttrComma -> Delimiter
cssBraces -> Delimiter
cssSelectorOp -> Delimiter
cssSelectorOp2 -> Delimiter
#}}}
# sass{{{
sassVariable -> Green
sassClassChar -> Yellow
sassMixing -> Blue
sassInclude -> Red
#}}}
# scss{{{
scssVariable -> Green
scssClassChar -> Yellow
#}}}
# less{{{
lessVariable -> Green
lessMixinChar -> Grey
#}}}
# js/jsx{{{
jsVariableDef -> Aqua
jsObjectProp -> Green
jsObjectKey -> Blue
jsParen -> Aqua
jsBracket -> Aqua
jsParenIfElse -> Aqua
jsParenRepeat -> Aqua
jsParenSwitch -> Aqua
jsGlobalObjects -> Yellow
jsFuncArgs -> Aqua
jsFunctionKey -> Green
jsThis -> Magenta
jsOperatorKeyword -> Red
jsClassDefinition -> Yellow
jsObjectKeyComputed -> Aqua
jsxTagName -> Orange
jsxComponentName -> Aqua
#}}}
# ts/tsx{{{
typescriptExceptions -> Exception
typescriptInterpolationDelimiter -> Blue
typescriptInterpolation -> Aqua
typescriptParens -> Delimiter
typescriptBraces -> Delimiter
typescriptEndColons -> Delimiter
typescriptGlobalObjects -> Aqua
typescriptOperator -> Red
#}}}
# dart{{{
dartCombinators -> Yellow
dartType -> Orange
dartTypedef -> Red
dartInterpolation -> Blue
dartBranch -> Orange
#}}}
# coffee{{{
coffeeParen -> Delimiter
coffeeCurly -> Delimiter
coffeeBracket -> Delimiter
coffeeInterpDelim -> Blue
coffeeInterp -> Aqua
coffeeConstant -> Yellow
#}}}
# purescript{{{
purescriptModuleName -> Aqua
purescriptOperatorTypeSig -> Magenta
#}}}
# java{{{
javaClassDecl -> Red
javaAnnotation -> Magenta
javaTypedef -> Aqua
#}}}
# kotlin{{{
ktComplexInterpolationBrace -> Blue
ktComplexInterpolation -> Aqua
ktConstant -> Yellow
ktStatement -> Red
ktKeyword -> Aqua
ktArrow -> Magenta
#}}}
# python{{{
pythonBuiltinType -> Yellow
#}}}
# go{{{
goVar -> Orange
goImport -> Red
goPackage -> Red
goBuiltins -> Green
goPredefinedIdentifiers -> Yellow
#}}}
# rust{{{
rustSuper -> Magenta
rustEnumVariant -> Yellow
rustSelf -> Aqua
rustModPath -> Aqua
rustModPathSep -> Grey
rustAttribute -> Magenta
rustMacroVariable -> Aqua
rustMacroRepeatDelimiters -> Magenta
rustPubScopeCrate -> Magenta
rustStructure -> Orange
#}}}
# # php{{{
# phpParent -> Delimiter
# phpFunction -> Function
# phpMethod -> Orange
# phpInclude -> Orange
# phpKeyword -> Red
# phpClass -> Orange
# phpClassNamespaceSeparator -> Yellow
# phpStaticClasses -> Yellow
# phpIdentifier -> Green
# phpIdentifierSimply -> Orange
# phpVarSelector -> Blue
# phpMemberSelector -> Delimiter
# phpOperator -> Delimiter
# #}}}
# # csharp{{{
# csBraces -> Delimiter
# csParens -> Delimiter
# csUnspecifiedStatement -> Orange
# csContextualStatement -> Green
# csNew -> Orange
# csNewType -> Yellow
# csClass -> Red
# csEndColon -> White
# csLogicSymbols -> Magenta
# csXmlComment -> SpecialComment
# csXmlCommentLeader -> SpecialComment
# #}}}
# # fsharp{{{
# fsharpKeyword -> Orange
# fsharpModifier -> Red
# fsharpModule -> Orange
# fsharpSymbol -> Green
# fsharpKeychar -> Blue
# fsharpOperator -> Blue
# fsharpOption -> Yellow
# fsharpCoreClass -> Yellow
# fsharpAttribute -> Orange
# fsharpAttrib -> Red
# #}}}
# # swift{{{
# swiftKeywords -> Orange
# swiftMethod -> Red
# swiftProperty -> Green
# #}}}
# # ruby{{{
# rubyInclude -> Red
# rubyControl -> Red
# rubyPredefinedVariable -> Green
# rubyConstant -> Orange
# rubyPseudoVariable -> Orange
# rubyInstanceVariable -> Yellow
# rubyModule -> Red
# rubyModuleName -> Orange
# rubyClass -> Red
# rubyClassName -> Orange
# rubyDefine -> Orange
# rubyMethodName -> Yellow
# rubyCapitalizedMethod -> Orange
# rubySymbol -> Identifier
# rubyExceptionHandler2 -> Red
# #}}}
# # perl{{{
# perlPackageDecl -> Orange
# perlStatementPackage -> Red
# perlStatementInclude -> Orange
# perlStatementStorage -> Red
# perlStatementInclude -> Red
# perlStatementFiledesc -> Orange
# perlStatementScalar -> Orange
# perlStatementList -> Yellow
# perlStatementFiles -> Orange
# perlStatementSocket -> Red
# perlStatementFlow -> Magenta
# perlStatementTime -> Yellow
# perlStatementRegexp -> Orange
# perlStringStartEnd -> Delimiter
# perlOperator -> Yellow
# perlFunction -> Red
# perlMethod -> Orange
# perlVarSimpleMemberName -> White
# #}}}
# # haskell{{{
# haskellImportKeywords -> Red
# haskellType -> Orange
# haskellWhere -> Blue
# haskellOperators -> Green
# haskellDeclKeyword -> Type
# haskellDecl -> Red
# #}}}
# # lua{{{
# luaBraces -> Delimiter
# luaFuncKeyword -> Red
# luaFuncArgName -> White
# luaLocal -> Orange
# luaSpecialValue -> Special
# luaFuncCall -> Function
# #}}}
# # moonscript{{{
# moonKeyword -> Red
# moonFunction -> Delimiter
# moonSpecialVar -> Orange
# moonInterpDelim -> Magenta
# moonLuaFunc -> Orange
# moonSpecialOp -> Magenta
# #}}}
# # d{{{
# dTypedef -> Orange
# dScopeDecl -> Red
# dLabel -> Yellow
# dOperator -> Green
# dAnnotation -> Yellow
# dEnum -> Orange
# dStructure -> Orange
# dStorageClass -> Orange
# dUserLabel -> Red
# #}}}
# # scala{{{
# scalaInstanceDeclaration -> Green
# scalaCapitalWord -> Green
# scalaAnnotation -> Red
# scalaSpecial -> Special
# scalaKeywordModifier -> Orange
# scalaSquareBracketsBrackets -> Delimiter
# #}}}
# # elixir{{{
# elixirAtom -> Green
# elixirInclude -> Orange
# elixirAlias -> Yellow
# elixirOperator -> Blue
# elixirDefine -> Red
# elixirPrivateDefine -> Red
# elixirVariable -> Orange
# elixirModuleDeclaration -> Orange
# elixirKeyword -> Orange
# #}}}
# # ocaml{{{
# ocamlModule -> Yellow
# ocamlModPath -> Green
# ocamlFullMod -> Yellow
# ocamlKeyword -> Orange
# ocamlArrow -> Delimiter
# ocamlEqual -> Operator
# ocamlModPreRHS -> Operator
# ocamlKeyChar -> Blue
# ocamlConstructor -> Green
# ocamlStructEncl -> Red
# ocamlPpxEncl -> Magenta
# #}}}
# # fortran{{{
# fortranCall -> Red
# fortranUnitHeader -> Red
# fortranKeyword -> Orange
# fortranReadWrite -> Orange
# fortranIO -> Yellow
# #}}}
# # clojure{{{
# clojureKeyword -> Orange
# clojureSpecial -> Orange
# clojureFunc -> Yellow
# clojureDispatch -> Magenta
# clojureAnonArg -> Blue
# #}}}
# # erlang{{{
# erlangAttribute -> Red
# erlangLocalFuncCall -> Orange
# erlangLocalFuncRef -> Yellow
# erlangGlobalFuncCall -> Yellow
# erlangType -> Red
# erlangMap -> Magenta
# erlangRecord -> Orange
# erlangVariable -> White
# erlangAtom -> Green
# #}}}
# # julia{{{
# juliaBlKeyword -> Orange
# #}}}
# # lisp{{{
# lispFunc -> Orange
# lispDecl -> Red
# lispVar -> Yellow
# #}}}
# # sh{{{
# shQuote -> Green
# shDeref -> Yellow
# shDerefSimple -> Yellow
# shDerefVar -> Orange
# shVariable -> Orange
# shOperator -> Blue
# shFunction -> Red
# shCmdSubRegion -> Delimiter
# shCommandSub -> Orange
# shStatement -> Red
# #}}}
# # zsh{{{
# zshDeref -> Yellow
# zshSubst -> Yellow
# zshSubstDelim -> Delimiter
# zshOption -> Orange
# zshTypes -> Orange
# zshKeyword -> Keyword
# zshCommands -> Orange
# zshShortDeref -> Orange
# zshDollarVar -> Orange
# zshFunction -> Red
# #}}}
# # fish{{{
# fishKeyword -> Red
# fishStatement -> Orange
# fishIdentifier -> Yellow
# #}}}
# # vim{{{
# vimLet -> Red
# vimCommand -> Orange
# vimOption -> Yellow
# vimNotFunc -> Blue
# vimFunction -> Yellow
# vimFuncName -> Yellow
# vimMap -> Red
# vimMapModKey -> Orange
# #}}}
# # json{{{
# jsonKeyword -> Orange
# jsonQuote -> White
# jsonBoolean -> White
# #}}}
# # yaml{{{
# yamlKey -> Orange
# yamlConstant -> Green
# #}}}
# # toml{{{
# tomlTable -> Red
# tomlTableArray -> Red
# tomlKey -> Orange
# #}}}
# # git{{{
# gitconfigSection -> Orange
# gitcommitBlank -> Orange
# #}}}
# # diff{{{
# diffAdded -> Green
# diffRemoved -> Red
# diffChanged -> Orange
# diffOldFile -> Blue
# diffNewFile -> Magenta
# diffFile -> Green
# diffLine -> Grey
# diffIndexLine -> Yellow
# diffSubname -> Orange
# #}}}
# # help{{{
# helpHyperTextEntry -> Red
# helpHyperTextJump -> Blue
# helpSectionDelim -> Grey
# helpHeadline -> Orange
# helpExample -> Green
# helpCommand -> Green
# helpHeader -> Orange
# #}}}
